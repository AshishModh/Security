<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">
    <import resource="spring-servlet.xml"/>

    <security:global-method-security secured-annotations="enabled"/>

    <security:http
            auto-config="false"
            use-expressions="true"
            create-session="ifRequired"
            entry-point-ref="jwtAuthenticationEntryPoint"
            authentication-manager-ref="authenticationManager">

        <security:csrf disabled="true"/>

        <security:custom-filter ref="jwtRequestFilter" after="BASIC_AUTH_FILTER"/>

        <security:intercept-url pattern="/login" access="permitAll()"/>
        <security:intercept-url pattern="/authenticate" access="permitAll()"/>
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>

        <!--        <security:access-denied-handler error-page="/403"/>-->

                <security:form-login
                        login-page="/login"
                        login-processing-url="/login"
                        username-parameter="username"
                        password-parameter="password"
                        default-target-url="/"/>
<!--                        authentication-failure-url="/login?error=true"/>-->
                <security:logout logout-url="jsp/logout.jsp"/>
    </security:http>

    <bean id="jwtAuthenticationEntryPoint" class="Config.JwtAuthenticationEntryPoint"/>

    <bean id="jwtTokenUtil" class="Config.JwtTokenUtil"/>

    <bean id="jwtUserDetailsService" class="Service.JwtUserDetailsService"/>


    <bean id="jwtRequestFilter" class="Config.JwtRequestFilter">
        <constructor-arg ref="jwtTokenUtil" name="jwtTokenUtil"/>
        <constructor-arg ref="jwtUserDetailsService" name="jwtUserDetailsService"/>
    </bean>

    <bean id="jwtAuthenticationController" class="Controller.JwtAuthenticationController">
        <constructor-arg ref="jwtTokenUtil" name="jwtTokenUtil"/>
        <constructor-arg ref="jwtUserDetailsService" name="jwtUserDetailsService"/>
        <constructor-arg ref="authenticationManager" name="authenticationManager"/>
    </bean>


    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"
          factory-method="getInstance"/>

    <!--    <bean name="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>-->


    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="jwtUserDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

<!--            <security:authentication-provider>-->
<!--                <security:jdbc-user-service data-source-ref="dataSource"-->
<!--                                            users-by-username-query="select name, password, enabled from USERDATA where name=?"-->
<!--                                            authorities-by-username-query="Select name, authority from AUTHORITIES where name=?"/>-->
<!--                &lt;!&ndash;                                        authorities-by-username-query="select u.name, ur.authority from USERS u, USERS_ROLE ur&ndash;&gt;-->
<!--                &lt;!&ndash;                                         where u.id = ur.id and u.name=?"/>&ndash;&gt;-->
<!--                <security:password-encoder ref="passwordEncoder"/>-->
<!--            </security:authentication-provider>-->
<!--        </security:authentication-manager>-->

</beans>